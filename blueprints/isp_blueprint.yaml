version: 2

entity:
  - name: isp
    type: ISP
    identifier: EntityID

    tables:
      - kind: preset
        type: entitylist
        table_name: entities
        source:
          kind: api
          endpoint: /app/api/entities/current
          parameters:
            entity_type:
              source: params.entity_filter
              description: Entity filter applied to the inventory response
              required: true
        cache:
          path: .cache/api_current_status.json
        sample:
          path: sample_inputs/entities/api_current_status.json
          format: json
        inputs:
          entity_filter: ISP
        extractors:
          - extractor: jsonArrayExtractor
            config:
              path: $.data.monitors
              filters:
                - path: monitor_type
                  equals: context.params.entity_filter
              mapping:
                EntityType: monitor_type
                EntityID: monitor_id
                EntityName: name
                EntityCurrentStatus: status
                EntityTags: tags
        metadata:
          description: "Seed the entities table with ISP monitors from the inventory API."
          upsert_keys:
            - EntityType
            - EntityID

      - kind: preset
        type: metrics
        table_name: isp_metrics
        source:
          kind: api
          endpoint: /app/api/isp/tabulardetails/{monitor_id}
          parameters:
            monitor_id:
              source: entity.EntityID
              description: Monitor identifier for the ISP entity
              required: true
        cache:
          template: .cache/{entity_type}/api_{entity_type_lower}_{entity_id}_tabulardetails.json
        sample:
          path: sample_inputs/metrics/api_isp_tabular_details_15698000397185121.json
          format: json
        inputs:
          metric_units:
            packet_loss: "%"
            latency: ms
            mtu: bytes
            jitter: ms
            asnumber_count: count
            hop_count: count
        extractors:
          - extractor: jsonKeyValueExtractor
            config:
              path: $.data.tabularData.map_data.data[0]
              ignore_keys:
                - location_id
                - location_name
                - collection_time
                - down
              mapping:
                MetricName: key
                CurrentValue: value
                EntityType: context.params.entity_type
                EntityID: context.params.entity_id
                MetricUnit: context.params.metric_units.{key}
          - extractor: jsonObjectExtractor
            config:
              path: $.data.tabularData.map_data.data[0]
              mapping:
                EntityInstance: location_id
                CollectionTime: collection_time
            merge_strategy: broadcast
        metadata:
          description: "Metric key/value pairs derived from ISP tabular details."
          upsert_keys:
            - EntityType
            - EntityID
            - EntityInstance
            - MetricName

      - kind: preset
        type: traces
        table_name: isp_traces
        source:
          kind: api
          endpoint: /api/isp/traceroute/{monitor_id}
          parameters:
            monitor_id:
              source: entity.EntityID
              description: Monitor identifier for traceroute spans
              required: true
        cache:
          template: .cache/{entity_type}/api_{entity_type_lower}_{entity_id}_traceroute.json
        sample:
          path: sample_inputs/traces/api_isp_traceroute_15698000397185121.json
          format: json
        transformations:
          - sample_transformation_rules/ISP/isp_trace_transformation.rules
        metadata:
          description: "Traceroute spans extracted via legacy transformation rules."

      - kind: preset
        type: logs
        table_name: isp_logs
        source:
          kind: api
          endpoint: /api/reports/log_reports/{monitor_id}
          parameters:
            monitor_id:
              source: entity.EntityID
              required: true
              description: Monitor identifier for log reports
            date:
              source: params.report_date
              description: ISO date for the log report window
        cache:
          template: .cache/{entity_type}/api_{entity_type_lower}_{entity_id}_log_reports.json
        sample:
          path: sample_inputs/logs/api_isp_15698000397185121_logreport.json
          format: json
        inputs:
          log_type: LogReport
          report_date: 2023-08-01
        extractors:
          - extractor: jsonArrayExtractor
            config:
              path: $.data.report
              mapping:
                LogType: context.params.log_type
                LogEntityType: context.params.entity_type
                LogEntityID: context.params.entity_id
                collection_time: collection_time
                location_id: location_id
                availability: availability
                latency: latency
                jitter: jitter
                packet_loss: packet_loss
                reason: reason
                Raw: $
        metadata:
          description: "Availability log entries expanded from log reports."

      - kind: preset
        type: events
        table_name: isp_events
        source:
          kind: api
          endpoint: /api/applog/search/{start_date}%20{start_time}/{end_date}%20{end_time}/{range}/desc
          config:
            query_param: q
            query_template: logtype="Infrastructure Events" and source="{entity_type}"
            pagination:
              page_size: 100
              start_index: 1
              max_pages: 1
            schedule:
              lookback: 24h
              align_to: now
          parameters:
            start_date:
              source: params.start_date
              description: Event search start date (YYYY-MM-DD)
            start_time:
              source: params.start_time
              description: Event search start time
            end_date:
              source: params.end_date
              description: Event search end date (YYYY-MM-DD)
            end_time:
              source: params.end_time
              description: Event search end time
            range:
              source: params.range
              description: Rolling window for event search
            monitor_id:
              source: entity.EntityID
              description: Monitor identifier for context
        cache:
          template: .cache/{entity_type}/api_{entity_type_lower}_{entity_id}_applog_search.json
        sample:
          path: sample_inputs/events/api_isp_infrastructure_events.json
          format: json
        inputs:
          event_type: Infrastructure
          event_source: ISP
          start_date: 2023-08-01
          start_time: 00:00
          end_date: 2023-08-02
          end_time: 00:00
          range: 24h
        extractors:
          - extractor: jsonArrayExtractor
            config:
              path: $.data.docs
              mapping:
                MonitorId: monitorid
                EventType: eventtype
                Severity: severity
                Source: source
                Message: message
                ReceivedTime: _zlf__zl_received_time
                Timestamp: _zl_timestamp
                Raw: $
        transformations:
          - sample_transformation_rules/eventlogs_transformation.rules
        metadata:
          description: "Infrastructure events derived from applog search results."
          upsert_keys:
            - EntityType
            - EntityID
            - EventId

    views:
      - name: isp_latest_health
        description: "Example: join Entities with latest isp_metrics"
        queries:
          - |
            SELECT e.EntityID, e.EntityName, m.MetricName, m.CurrentValue
            FROM Entities e
            JOIN isp_metrics m ON m.EntityID = e.EntityID
            WHERE e.EntityType = :entity_type
            ORDER BY m.EntityID, m.MetricName
        params:
          entity_type: ISP

    metadata:
      tags: [observability, isp]
      owner: ops-team
